[defaults]
inventory = ./inventory/
forks = 20
host_key_checking = False
log_path = ./ansible.log
private_key_file = ~/.ssh/gcp-key 
remote_user = brinendamketum      
timeout = 30

[ssh_connection]
ssh_args = -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no
interpreter_python = auto_silent

[inventory]
enable_plugins = gcp_compute

# Let Ansible decide connection per host (SSH or WinRM)
transport = smart

# GCP-specific settings
[gcp_compute]
service_account_file = ./gcp-key.json
projects = poc-project-463913

# -----------------------------------------------------------------------------
# GCP Authentication Options:
# -----------------------------------------------------------------------------
# Option 1: Service Account File (Recommended)
# - Ensure gcp-key.json is in your inventory directory
# - Or set GOOGLE_APPLICATION_CREDENTIALS environment variable
#
# Option 2: Application Default Credentials
# - Run: gcloud auth application-default login
# - Comment out service_account_file line above
#
# -----------------------------------------------------------------------------
# SSH Key Authentication for Linux VMs:
# -----------------------------------------------------------------------------
# GCP Linux VMs use SSH key authentication by default
# Key: ~/.ssh/gcp-key (generated during terraform setup)
# Username: brinendamketum (from your email: brinendamketum@gmail.com)
#
# -----------------------------------------------------------------------------  
# Windows VM Authentication:
# -----------------------------------------------------------------------------
# Windows VMs use WinRM with username/password
# Username: brine
# Password: Bravedemo123.
# These are set in the windows_prod_vms.yaml group vars
#
# -----------------------------------------------------------------------------
# If you prefer to use SSH with password authentication instead of SSH key:
# -----------------------------------------------------------------------------
# 1. Comment out the 'private_key_file' line above.
# 2. Run your playbook using the --ask-pass flag to prompt for SSH password:
#    ansible-playbook -i inventory.ini playbook.yaml --ask-pass
# 3. You can also add --ask-become-pass if sudo password is needed.
#
# Example:
#    ansible-playbook -i inventory.ini main.yaml --ask-pass --ask-become-pass
#
# Note: You can also define the password inline using vault or vars (only during deployments).