2025-05-28 15:51:17,589 p=12282 u=brinketu n=ansible | ansible-playbook 2.9.27
  config file = /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg
  configured module search path = ['/Users/brinketu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible
  executable location = /Users/brinketu/.pyenv/versions/3.8.18/bin/ansible-playbook
  python version = 3.8.18 (default, May 28 2025, 06:01:18) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-05-28 15:51:17,589 p=12282 u=brinketu n=ansible | Using /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg as config file
2025-05-28 15:51:17,606 p=12282 u=brinketu n=ansible | host_list declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:17,606 p=12282 u=brinketu n=ansible | script declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:17,606 p=12282 u=brinketu n=ansible | auto declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:17,606 p=12282 u=brinketu n=ansible | yaml declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:17,607 p=12282 u=brinketu n=ansible | Parsed /Users/brinketu/CloudlensFIle/Ansible/inventory.ini inventory source with ini plugin
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'actionable', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'counter_enabled', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'debug', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'full_skip', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'json', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'null', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'selective', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'skippy', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'stderr', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'unixy', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | Skipping callback 'yaml', as we already have a stdout callback.
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | PLAYBOOK: windows.yaml *******************************************************************************************************************************************************************************************
2025-05-28 15:51:18,344 p=12282 u=brinketu n=ansible | 1 plays in windows.yaml
2025-05-28 15:51:18,346 p=12282 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:18,346 p=12282 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:18,346 p=12282 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:18,347 p=12282 u=brinketu n=ansible | PLAY [Deploy CloudLens Agent to Windows VMs] *********************************************************************************************************************************************************************
2025-05-28 15:51:18,352 p=12282 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:18,353 p=12282 u=brinketu n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************************
2025-05-28 15:51:18,400 p=12323 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/setup.ps1
2025-05-28 15:51:18,400 p=12323 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:51:18,401 p=12323 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:51:18,919 p=12282 u=brinketu n=ansible | fatal: [172.203.25.86]: UNREACHABLE! => {
    "changed": false,
    "msg": "ntlm: the specified credentials were rejected by the server",
    "unreachable": true
}
2025-05-28 15:51:18,920 p=12282 u=brinketu n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************
2025-05-28 15:51:18,920 p=12282 u=brinketu n=ansible | 172.203.25.86              : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-05-28 15:51:48,816 p=12728 u=brinketu n=ansible | ansible-playbook 2.9.27
  config file = /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg
  configured module search path = ['/Users/brinketu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible
  executable location = /Users/brinketu/.pyenv/versions/3.8.18/bin/ansible-playbook
  python version = 3.8.18 (default, May 28 2025, 06:01:18) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-05-28 15:51:48,816 p=12728 u=brinketu n=ansible | Using /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg as config file
2025-05-28 15:51:48,830 p=12728 u=brinketu n=ansible | host_list declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:48,830 p=12728 u=brinketu n=ansible | script declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:48,830 p=12728 u=brinketu n=ansible | auto declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:48,830 p=12728 u=brinketu n=ansible | yaml declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:51:48,831 p=12728 u=brinketu n=ansible | Parsed /Users/brinketu/CloudlensFIle/Ansible/inventory.ini inventory source with ini plugin
2025-05-28 15:51:49,345 p=12728 u=brinketu n=ansible | Skipping callback 'actionable', as we already have a stdout callback.
2025-05-28 15:51:49,345 p=12728 u=brinketu n=ansible | Skipping callback 'counter_enabled', as we already have a stdout callback.
2025-05-28 15:51:49,345 p=12728 u=brinketu n=ansible | Skipping callback 'debug', as we already have a stdout callback.
2025-05-28 15:51:49,345 p=12728 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'full_skip', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'json', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'null', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'selective', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'skippy', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'stderr', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'unixy', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | Skipping callback 'yaml', as we already have a stdout callback.
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | PLAYBOOK: windows.yaml *******************************************************************************************************************************************************************************************
2025-05-28 15:51:49,346 p=12728 u=brinketu n=ansible | 1 plays in windows.yaml
2025-05-28 15:51:49,348 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:49,348 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:49,348 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:49,348 p=12728 u=brinketu n=ansible | PLAY [Deploy CloudLens Agent to Windows VMs] *********************************************************************************************************************************************************************
2025-05-28 15:51:49,354 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:51:49,354 p=12728 u=brinketu n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************************
2025-05-28 15:51:49,383 p=12793 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/setup.ps1
2025-05-28 15:51:49,383 p=12793 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:51:49,384 p=12793 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:51:50,088 p=12793 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:04,864 p=12728 u=brinketu n=ansible | ok: [172.203.25.86]
2025-05-28 15:52:04,864 p=12728 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:52:04,866 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:04,866 p=12728 u=brinketu n=ansible | TASK [Ensure C:\temp directory exists] ***************************************************************************************************************************************************************************
2025-05-28 15:52:04,895 p=13020 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_file.ps1
2025-05-28 15:52:04,896 p=13020 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:04,897 p=13020 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:52:05,434 p=13020 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:08,385 p=12728 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true
}
2025-05-28 15:52:08,395 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:08,395 p=12728 u=brinketu n=ansible | TASK [Copy CA certificate to the Windows VM (for SSL verification)] **********************************************************************************************************************************************
2025-05-28 15:52:08,435 p=13035 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_copy.ps1
2025-05-28 15:52:08,435 p=13035 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:08,436 p=13035 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:52:08,967 p=13035 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:10,186 p=13035 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:11,880 p=13035 u=brinketu n=ansible | <172.203.25.86> PUT "/Users/brinketu/NewCerts/cloudlenscerts.crt" TO "C:\Users\brineadmin\AppData\Local\Temp\ansible-tmp-1748461930.1856918-13035-157889830176348\source"
2025-05-28 15:52:12,594 p=13035 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_copy.ps1
2025-05-28 15:52:12,594 p=13035 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:12,595 p=13035 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:13,761 p=13035 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:15,428 p=12728 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true,
    "checksum": "9b6e5f82da93aa84ae4f0f7537960de5246935b3",
    "dest": "C:\\temp\\cloudlens_ca.crt",
    "operation": "file_copy",
    "original_basename": "cloudlenscerts.crt",
    "size": 1489,
    "src": "/Users/brinketu/NewCerts/cloudlenscerts.crt"
}
2025-05-28 15:52:15,435 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:15,436 p=12728 u=brinketu n=ansible | TASK [Import CA cert into Trusted Root Certification Authorities] ************************************************************************************************************************************************
2025-05-28 15:52:15,476 p=13154 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_certificate_store.ps1
2025-05-28 15:52:15,477 p=13154 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:15,477 p=13154 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:52:16,025 p=13154 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:18,354 p=12728 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true,
    "invocation": {
        "module_args": {
            "file_type": "der",
            "key_exportable": true,
            "key_storage": "default",
            "password": null,
            "path": "C:\\temp\\cloudlens_ca.crt",
            "state": "present",
            "store_location": "LocalMachine",
            "store_name": "Root",
            "thumbprint": null
        }
    },
    "thumbprints": [
        "EEDA2FD7867605F5F6384C259786987F45604B85"
    ]
}
2025-05-28 15:52:18,361 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:18,361 p=12728 u=brinketu n=ansible | TASK [Check if CloudLens Agent is already installed via registry] ************************************************************************************************************************************************
2025-05-28 15:52:18,386 p=13163 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_shell.ps1
2025-05-28 15:52:18,387 p=13163 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:18,387 p=13163 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:52:18,926 p=13163 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:21,311 p=12728 u=brinketu n=ansible | ok: [172.203.25.86] => {
    "changed": false,
    "cmd": "$found = Get-ChildItem -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" |\n  Where-Object {\n    ($_ | Get-ItemProperty).DisplayName -like \"*CloudLens Agent*\"\n  }\nif ($found) {\n  $found | Select-Object -ExpandProperty PSChildName\n}",
    "delta": "0:00:00.718747",
    "end": "2025-05-28 07:52:21.113287",
    "rc": 0,
    "start": "2025-05-28 07:52:20.394540",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}
2025-05-28 15:52:21,312 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:21,312 p=12728 u=brinketu n=ansible | TASK [Uninstall CloudLens Agent if already installed] ************************************************************************************************************************************************************
2025-05-28 15:52:21,328 p=12728 u=brinketu n=ansible | skipping: [172.203.25.86] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2025-05-28 15:52:21,329 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:52:21,329 p=12728 u=brinketu n=ansible | TASK [Transfer CloudLens Agent installer to the Windows VM] ******************************************************************************************************************************************************
2025-05-28 15:52:21,392 p=13210 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_copy.ps1
2025-05-28 15:52:21,392 p=13210 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:52:21,393 p=13210 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:52:21,927 p=13210 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:23,328 p=13210 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:52:24,745 p=13210 u=brinketu n=ansible | <172.203.25.86> PUT "/Users/brinketu/Downloads/cloudlens-win-sensor-6.11.1.302.exe" TO "C:\Users\brineadmin\AppData\Local\Temp\ansible-tmp-1748461943.327931-13210-99242892146700\source"
2025-05-28 15:53:03,817 p=13210 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_copy.ps1
2025-05-28 15:53:03,817 p=13210 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:53:03,818 p=13210 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:53:06,323 p=13210 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:53:07,284 p=12728 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true,
    "checksum": "3aa0498035b5c245fab26ce43c62cbfa51cbd235",
    "dest": "C:\\temp\\cloudlens-win-sensor-6.11.1.302.exe",
    "operation": "file_copy",
    "original_basename": "cloudlens-win-sensor-6.11.1.302.exe",
    "size": 62513669,
    "src": "/Users/brinketu/Downloads/cloudlens-win-sensor-6.11.1.302.exe"
}
2025-05-28 15:53:07,292 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:53:07,292 p=12728 u=brinketu n=ansible | TASK [Install CloudLens Agent using silent install] **************************************************************************************************************************************************************
2025-05-28 15:53:07,330 p=13825 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_shell.ps1
2025-05-28 15:53:07,331 p=13825 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:53:07,331 p=13825 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:53:07,894 p=13825 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:54:40,722 p=12728 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true,
    "cmd": "C:\\temp\\cloudlens-win-sensor-6.11.1.302.exe /install /quiet Server=\"20.12.10.80\" Project_Key=\"c09b143bedd64a7fb3f0b138a409ff66\" SSL_Verify=\"yes\" Auto_Update=\"yes\" Custom_Tags=\"Env=Azure Region=US-East2\" -Wait",
    "delta": "0:01:30.921774",
    "end": "2025-05-28 07:54:40.472421",
    "rc": 0,
    "start": "2025-05-28 07:53:09.550647",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}
2025-05-28 15:54:40,731 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:54:40,731 p=12728 u=brinketu n=ansible | TASK [Display silent install output] *****************************************************************************************************************************************************************************
2025-05-28 15:54:40,752 p=12728 u=brinketu n=ansible | ok: [172.203.25.86] => {
    "silent_install_result.stdout": ""
}
2025-05-28 15:54:40,754 p=12728 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:54:40,754 p=12728 u=brinketu n=ansible | TASK [Check if installation was successful] **********************************************************************************************************************************************************************
2025-05-28 15:54:40,765 p=12728 u=brinketu n=ansible | skipping: [172.203.25.86] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2025-05-28 15:54:40,766 p=12728 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:54:40,766 p=12728 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:54:40,766 p=12728 u=brinketu n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************
2025-05-28 15:54:40,766 p=12728 u=brinketu n=ansible | 172.203.25.86              : ok=8    changed=5    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-05-28 15:55:11,554 p=15390 u=brinketu n=ansible | ansible-playbook 2.9.27
  config file = /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg
  configured module search path = ['/Users/brinketu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible
  executable location = /Users/brinketu/.pyenv/versions/3.8.18/bin/ansible-playbook
  python version = 3.8.18 (default, May 28 2025, 06:01:18) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-05-28 15:55:11,554 p=15390 u=brinketu n=ansible | Using /Users/brinketu/CloudlensFIle/Ansible/ansible.cfg as config file
2025-05-28 15:55:11,569 p=15390 u=brinketu n=ansible | host_list declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:55:11,569 p=15390 u=brinketu n=ansible | script declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:55:11,569 p=15390 u=brinketu n=ansible | auto declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:55:11,570 p=15390 u=brinketu n=ansible | yaml declined parsing /Users/brinketu/CloudlensFIle/Ansible/inventory.ini as it did not pass its verify_file() method
2025-05-28 15:55:11,570 p=15390 u=brinketu n=ansible | Parsed /Users/brinketu/CloudlensFIle/Ansible/inventory.ini inventory source with ini plugin
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'actionable', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'counter_enabled', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'debug', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'dense', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'full_skip', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'json', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'null', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'selective', as we already have a stdout callback.
2025-05-28 15:55:12,167 p=15390 u=brinketu n=ansible | Skipping callback 'skippy', as we already have a stdout callback.
2025-05-28 15:55:12,168 p=15390 u=brinketu n=ansible | Skipping callback 'stderr', as we already have a stdout callback.
2025-05-28 15:55:12,168 p=15390 u=brinketu n=ansible | Skipping callback 'unixy', as we already have a stdout callback.
2025-05-28 15:55:12,168 p=15390 u=brinketu n=ansible | Skipping callback 'yaml', as we already have a stdout callback.
2025-05-28 15:55:12,168 p=15390 u=brinketu n=ansible | PLAYBOOK: windows_cleanup.yaml ***********************************************************************************************************************************************************************************
2025-05-28 15:55:12,168 p=15390 u=brinketu n=ansible | 1 plays in windows_cleanup.yaml
2025-05-28 15:55:12,170 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:12,170 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:12,170 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:12,170 p=15390 u=brinketu n=ansible | PLAY [Uninstall CloudLens Agent from Windows VMs] ****************************************************************************************************************************************************************
2025-05-28 15:55:12,176 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:12,176 p=15390 u=brinketu n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************************************************************
2025-05-28 15:55:12,221 p=15508 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/setup.ps1
2025-05-28 15:55:12,221 p=15508 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:55:12,222 p=15508 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:55:12,757 p=15508 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:55:20,370 p=15390 u=brinketu n=ansible | ok: [172.203.25.86]
2025-05-28 15:55:20,371 p=15390 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:55:20,377 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:20,378 p=15390 u=brinketu n=ansible | TASK [Check if CloudLens Agent is installed via registry] ********************************************************************************************************************************************************
2025-05-28 15:55:20,408 p=15559 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_shell.ps1
2025-05-28 15:55:20,408 p=15559 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:55:20,409 p=15559 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:55:20,947 p=15559 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:55:22,735 p=15390 u=brinketu n=ansible | ok: [172.203.25.86] => {
    "changed": false,
    "cmd": "$found = Get-ChildItem -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\" |\n  Where-Object {\n    ($_ | Get-ItemProperty).DisplayName -like \"*CloudLens Agent*\"\n  }\nif ($found) {\n  $found | Select-Object -ExpandProperty PSChildName\n}",
    "delta": "0:00:00.375012",
    "end": "2025-05-28 07:55:22.536528",
    "rc": 0,
    "start": "2025-05-28 07:55:22.161516",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "",
    "stdout_lines": []
}
2025-05-28 15:55:22,742 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:22,742 p=15390 u=brinketu n=ansible | TASK [Uninstall CloudLens Agent if found] ************************************************************************************************************************************************************************
2025-05-28 15:55:22,767 p=15390 u=brinketu n=ansible | skipping: [172.203.25.86] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
2025-05-28 15:55:22,772 p=15390 u=brinketu n=ansible | Read vars_file 'variables.yaml'
2025-05-28 15:55:22,772 p=15390 u=brinketu n=ansible | TASK [Delete CloudLens installer from C:\temp] *******************************************************************************************************************************************************************
2025-05-28 15:55:22,824 p=15644 u=brinketu n=ansible | Using module file /Users/brinketu/.pyenv/versions/3.8.18/lib/python3.8/site-packages/ansible/modules/windows/win_file.ps1
2025-05-28 15:55:22,824 p=15644 u=brinketu n=ansible | Pipelining is enabled.
2025-05-28 15:55:22,825 p=15644 u=brinketu n=ansible | <172.203.25.86> ESTABLISH WINRM CONNECTION FOR USER: brineadmin on PORT 5986 TO 172.203.25.86
2025-05-28 15:55:23,341 p=15644 u=brinketu n=ansible | EXEC (via pipeline wrapper)
2025-05-28 15:55:24,627 p=15390 u=brinketu n=ansible | changed: [172.203.25.86] => {
    "changed": true
}
2025-05-28 15:55:24,627 p=15390 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:55:24,627 p=15390 u=brinketu n=ansible | META: ran handlers
2025-05-28 15:55:24,628 p=15390 u=brinketu n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************
2025-05-28 15:55:24,628 p=15390 u=brinketu n=ansible | 172.203.25.86              : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
